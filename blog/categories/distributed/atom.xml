<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: distributed | Shady Minds]]></title>
  <link href="http://dyagilev.org/blog/categories/distributed/atom.xml" rel="self"/>
  <link href="http://dyagilev.org/"/>
  <updated>2017-12-06T14:34:44+02:00</updated>
  <id>http://dyagilev.org/</id>
  <author>
    <name><![CDATA[Oleksiy Dyagilev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java enums in distributed systems]]></title>
    <link href="http://dyagilev.org/blog/2016/01/20/java-enums-in-distributed-systems/"/>
    <updated>2016-01-20T23:01:20+02:00</updated>
    <id>http://dyagilev.org/blog/2016/01/20/java-enums-in-distributed-systems</id>
    <content type="html"><![CDATA[<p>Did you ever think about how <code>hashCode()</code> of <code>java.lang.Enum</code> implemented?</p>

<!-- more -->

<p>Surprisingly or not it’s</p>

<p><code>java
public final int hashCode() {
  return super.hashCode();
}
</code></p>

<p>it returns the <code>Object</code>’s <code>hashCode</code> which is an internal address of the object to a certain extend. From the first glance it totally makes sense since <code>Enum</code> values are singletons.</p>

<p>Now imagine you are building distributed system. Distributed systems use <code>hashCode</code> to</p>

<ul>
  <li>determine which worker in a cluster should handle part of a huge job</li>
  <li>determine which node in a cluster should store given item of dataset (e.g. in distributed cache)</li>
</ul>

<p>The same <code>Enum</code> instance would give you a different <code>hashCode</code> value in different JVMs/hosts, screwing up your Hadoop job or put/lookup in distributed storage. Just something I faced recently.</p>

]]></content>
  </entry>
  
</feed>
